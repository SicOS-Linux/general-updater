#!/bin/bash
# -*- ENCODING: UTF-8 -*-

# Script information
SCRIPT_NAME="GENERAL UPDATER"
AUTHOR="JÃºlia Klee"
LICENSE_URL="https://opensource.org/licenses/MIT"

# Colors for formatting
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
PURPLE='\033[0;35m'
WHITE_ON_PURPLE='\033[01;37;45m'
NC='\033[0m'  # No Color

# Ensure the script is run as root
if [[ "$EUID" -ne 0 ]]; then
    echo -e "${RED}This command must be run as root. Please run again with 'sudo'.${NC}"
    exit 1
fi

# Function to display the header
function show_header {
    clear
    echo -e "${WHITE_ON_PURPLE}========== $SCRIPT_NAME ==========${NC}"
    echo -e "${PURPLE}Author:${NC} $AUTHOR"
    echo -e "${PURPLE}License:${NC} $LICENSE_URL"
    echo -e "${WHITE_ON_PURPLE}===============================================${NC}"
    echo -e "Hello, User! Welcome to the update utility."
    echo -e "This script will update your .deb packages, Flatpaks, and Snaps (if installed)."
    echo -e "The program will automatically close when all updates are completed."
    echo -e "${WHITE_ON_PURPLE}===============================================${NC}"
}

# Function to confirm before proceeding
function confirm_execution {
    echo -e "${YELLOW}Do you want to proceed with the updates? (y/n)${NC}"
    read -r confirmation
    if [[ "$confirmation" != "y" && "$confirmation" != "Y" ]]; then
        echo -e "${RED}Update canceled by user.${NC}"
        exit 1
    fi
}

# Function to update .deb packages
function update_deb {
    echo -e "${GREEN}Starting .deb packages update...${NC}"
    sudo apt update && sudo apt full-upgrade -y
    if [[ $? -eq 0 ]]; then
        echo -e "${GREEN}.deb packages updated successfully!${NC}"
    else
        echo -e "${RED}Failed to update .deb packages.${NC}"
    fi
}

# Function to update Flatpaks
function update_flatpak {
    echo -e "${GREEN}Starting Flatpak update...${NC}"
    flatpak update -y
    if [[ $? -eq 0 ]]; then
        echo -e "${GREEN}Flatpaks updated successfully!${NC}"
    else
        echo -e "${RED}Failed to update Flatpaks.${NC}"
    fi
}

# Function to check if Snap is installed and update it
function update_snap {
    if command -v snap &> /dev/null; then
        echo -e "${GREEN}Snap detected. Starting Snap update...${NC}"
        sudo snap refresh
        if [[ $? -eq 0 ]]; then
            echo -e "${GREEN}Snap packages updated successfully!${NC}"
        else
            echo -e "${RED}Failed to update Snap packages.${NC}"
        fi
    else
        echo -e "${YELLOW}Snap is not installed. Skipping Snap update.${NC}"
    fi
}

# Main function
function main {
    show_header

    # Confirm execution
    confirm_execution

    # Update .deb packages
    update_deb

    # Update Flatpaks
    update_flatpak

    # Check for Snap and update if installed
    update_snap

    # Final message
    echo -e "${WHITE_ON_PURPLE}========== UPDATE COMPLETED ==========${NC}"
    echo -e "Thank you for using $SCRIPT_NAME. See you next time!"
    exit 0  # Ensures the script exits automatically
}

# Run the main script
main
